export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"vCard.js","sourceRoot":"","sources":["../../../../../projects/ngx-vcard/src/lib/types/vCard.ts"],"names":[],"mappings":"","sourcesContent":["import { BasicPropertyParameters } from \"./parameter/BasicPropertyParameters.type\";\n\n/**\n * vCard interface with properties for the vCard format, which allows the capture and exchange of\n   information normally stored within an address book or directory application.\n * Explanations from [RFC 6350](https://tools.ietf.org/html/rfc6350)\n * Does not support xml Encapsulation.\n */\nexport interface VCard {\n  /***********************************************************************************************\n   * General Property\n   ***********************************************************************************************/\n\n  /**\n   * The source of directory information contained in the content type.\n   * @kind SOURCE\n   * @link https://tools.ietf.org/html/rfc6350#section-6.1.3\n   */\n  source?: string | { value: string; param: BasicPropertyParameters };\n  /**\n   * The kind of object the vCard represents.\n   * @kind KIND\n   */\n  kind?: \"individual\" | \"group\" | \"org\" | \"location\";\n  /**\n   * Include extended XML-encoded vCard data in a plain vCard.\n   * @kind XML\n   * @link https://tools.ietf.org/html/rfc6350#section-6.1.5\n   */\n  xml?: string;\n\n  /***********************************************************************************************\n   * Identification Properties\n   ***********************************************************************************************/\n\n  /**\n   * The formatted text corresponding to the name of the object the vCard represents.\n   * (will automatically populatet if not set)\n   * @kind FN\n   */\n  // formattedName?: Name | { work?: Name, home?: Name };\n  formattedName?: Name;\n\n  /**\n   * The name of the object the vCard represents.\n   * @kind N\n   */\n  name?: Name;\n  /**\n   * The text corresponding to the nickname of the object the vCard represents.\n   * @kind NICKNAME\n   */\n  // nickname?: string | { work?: string, home?: string };\n  nickname?: string;\n\n  /**\n   * An image or photograph information that annotates some aspect of the object the vCard represents.\n   * @kind PHOTO\n   */\n  photo?: string | { value: string; param: BasicPropertyParameters };\n\n  /**\n   * The birth date of the object the vCard represents.\n   * @kind BDAY\n   */\n  birthday?: Date;\n  /**\n   * Date of marriage, or equivalent, of the object the vCard represents.\n   * @kind ANNIVERSARY\n   */\n  anniversary?: Date;\n  /**\n   * The components of the sex and gender identity of the object the vCard represents.\n   * @kind GENDER\n   */\n  gender?: Gender;\n\n  /***********************************************************************************************\n   * Delivery Addressing Properties\n   ***********************************************************************************************/\n\n  /**\n   * The components of the delivery address for the vCard object.\n   * @kind ADR\n   */\n  address?: Array<Address | { value: Address; param: BasicPropertyParameters }>;\n\n  /***********************************************************************************************\n   * Communications Properties\n   ***********************************************************************************************/\n\n  /**\n   * The telephone number for telephony communication with the object the vCard represents.\n   * @kind TEL\n   */\n  telephone?: Array<string | { value: string; param: BasicPropertyParameters }>;\n\n  /**\n   * Work facsimile\n   */\n  workFax?: string[];\n  /**\n   * Home facsimile\n   */\n  homeFax?: string[];\n\n  /**\n   * The electronic mail address for communication with the object the vCard represents.\n   * @kind EMAIL\n   */\n  email?: Array<string | { value: string; param: BasicPropertyParameters }>;\n\n  /**\n   * The address for work-related electronic mail communication\n   * @deprecated\n   */\n  workEmail?: string[];\n  /**\n   * The address for other electronic mail communication\n   * @deprecated\n   */\n  otherEmail?: string[];\n  /**\n   * The URI for instant messaging and presence protocol communications with the object the vCard represents.\n   * @kind IMPP\n   */\n  instantMessagingPresenceProtocol?: string;\n  /**\n   * The language(s) that may be used for contacting the entity associated with the vCard.\n   * @kind LANG\n   */\n  language?: Array<string | { value: string; param: BasicPropertyParameters }>;\n\n  /***********************************************************************************************\n   * Geographical Properties\n   ***********************************************************************************************/\n\n  /**\n   * Information related to the time zone of the object the vCard represents.\n   * @kind TZ\n   */\n  timezone?: string;\n\n  /**\n   * Information related to the global positioning of the object the vCard represents.\n   * @kind GEO\n   */\n  geoPosition?: string;\n\n  /***********************************************************************************************\n   * Organizational Properties\n   ***********************************************************************************************/\n\n  /**\n   * The position or job of the object the vCard represents.\n   * @kind TITLE\n   */\n  title?: string;\n  /**\n   * The function or part played in a particular situation by the object the vCard represents.\n   * @kind ROLE\n   */\n  role?: string;\n  /**\n   * A graphic image of a logo associated with the object the vCard represents.\n   * @kind LOGO\n   */\n  logo?: string | { value: string; param: BasicPropertyParameters };\n  /**\n   * The organizational name and units associated with the vCard.\n   * @kind ORG\n   */\n  organization?: string | { value: string; param: BasicPropertyParameters };\n  /**\n   * A member in the group this vCard represents.\n   * @kind MEMBER\n   */\n  member?: string;\n  /**\n   * A relationship between another entity and the entity represented by this vCard.\n   * @kind RELATED\n   */\n  related?: {\n    type:\n      | \"contact\"\n      | \"acquaintance\"\n      | \"friend\"\n      | \"met\"\n      | \"co-worker\"\n      | \"colleague\"\n      | \"co-resident\"\n      | \"neighbor\"\n      | \"child\"\n      | \"parent\"\n      | \"sibling\"\n      | \"spouse\"\n      | \"kin\"\n      | \"muse\"\n      | \"crush\"\n      | \"date\"\n      | \"sweetheart\"\n      | \"me\"\n      | \"agent\"\n      | \"emergency\";\n    value: string;\n  }[];\n\n  /***********************************************************************************************\n   * Explanatory Properties\n   ***********************************************************************************************/\n\n  /**\n   * Application category information about the vCard, also known as \"tags\".\n   * @kind CATEGORIES\n   */\n  categories?: string[];\n  /**\n   * Supplemental information or a comment that is associated with the vCard.\n   * @kind NOTE\n   */\n  note?: string;\n  /**\n   * The identifier for the product that created the vCard object.\n   * @kind PRODID\n   */\n  prodid?: string;\n  /**\n   * Revision information about the current vCard.\n   * @kind REV\n   */\n  rev?: string;\n  /**\n   * A digital sound content information that annotates some aspect of the vCard.\n   * This property is often used to specify the proper pronunciation of the name property value of the vCard.\n   * @kind SOUND\n   */\n  sound?: string;\n  /**\n   * A value that represents a globally unique identifier corresponding to the entity associated with the vCard.\n   * @kind UID\n   */\n  uid?: string;\n  /**\n   * To give a global meaning to a local PID source identifier.\n   * @kind CLIENTPIDMAP\n   */\n  clientpidmap?: string;\n  /**\n   * A uniform resource locator associated with the object to which the vCard refers.\n   * Examples for individuals include personal web sites, blogs, and social networking site identifiers.\n   * @kind URL\n   */\n  url?: string | { work: string; home: string };\n  /**\n   * The version of the vCard specification used to format this vCard.\n   * @kind VERSION\n   */\n  version?: string;\n\n  /***********************************************************************************************\n   * Security Properties\n   ***********************************************************************************************/\n\n  /**\n   * A public key or authentication certificate associated with the object that the vCard represents.\n   * @kind KEY\n   */\n  key?: string;\n\n  /***********************************************************************************************\n   * Calendar Properties\n   ***********************************************************************************************/\n  /**\n   * The URI for the busy time associated with the object that the vCard represents.\n   * @kind FBURL\n   */\n  fburl?: string;\n\n  /**\n   * The calendar user address to which a scheduling request should be sent for the object represented by the vCard.\n   * @kind CALADRURI\n   */\n  caladURI?: string;\n\n  /**\n   * The URI for a calendar associated with the object represented by the vCard.\n   * @kind CALURI\n   */\n  calenderURI?: string;\n\n  socialUrls?: any;\n}\n\nexport interface Address {\n  /**\n   * Represents the actual text that should be put on the mailing label when delivering a physical package\n   */\n  label?: string;\n\n  /**\n   * The post office box\n   * @deprecated Incompatibility with vCard Version 3\n   */\n  postOfficeBox?: string;\n\n  /**\n   * The extended address (e.g. apartment or suite number)\n   * @deprecated Incompatibility with vCard Version 3\n   */\n  extendedAddress?: string;\n\n  /**\n   * Street address\n   */\n  street?: string;\n\n  /**\n   * locality (e.g. city)\n   */\n  locality?: string;\n\n  /**\n   * region (e.g. state or province)\n   */\n  region?: string;\n\n  /**\n   * Postal code\n   */\n  postalCode?: string;\n\n  /**\n   * country name (full name)\n   */\n  countryName?: string;\n}\n\nexport interface Name {\n  /**\n   * Family Names (Surnames)\n   */\n  lastNames?: string;\n  /**\n   * First Names (Given Names)\n   */\n  firstNames?: string;\n  /**\n   * Additional Names\n   */\n  addtionalNames?: string;\n  /**\n   * Prefix for individual's name (Honorific Prefixes)\n   */\n  namePrefix?: string;\n  /**\n   * Suffix for individual's name (Honorific Suffixes)\n   */\n  nameSuffix?: string;\n}\n\n/**\n * To specify the components of the sex and gender identity of the object the vCard represents.\n */\nexport interface Gender {\n  /**\n   * sex (biological)\n   * @description\n   * M stands for \"male\", F stands for \"female\", O stands for \"other\", N stands for \"none or not applicable\", U stands for \"unknown\".\n   */\n  sex?: \"M\" | \"F\" | \"O\" | \"N\" | \"U\";\n\n  /**\n   * Gender identity\n   */\n  text?: string;\n}\n"]}